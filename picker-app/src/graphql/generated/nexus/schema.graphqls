### This file was generated by Nexus Schema
### Do not make changes to this file directly

type AricleItem {
  description: String
  id: ID!
  imageUrls: [String!]
  title: String
}

type ColorImages {
  colorCode: String!
  colorId: ID!
  imageUrls: [String!]!
}

interface ISpikeBase {
  allWeatherOnly: Boolean
  angleScore: Float
  brand: TAFBrands
  colorImages: [ColorImages!]!
  events: [TAFShoeEvents!]
  gripScore: Float
  hardnessScore: Float
  id: String!
  lightnessScore: Float
  name: String!
  nameEn: String
  price: Int
  score: Int
  weight: Int
  widthScore: Float
}

interface ISpikeDetail {
  amazonUrl: String
  brandPageUrl: String
  detailSpec: SpikeDetailSpec
  keyFeature: [AricleItem!]
  newModels: [ISpikeBase!]
  rakutenUrl: String
  recommendItems: [ISpikeBase!]
  recommendedFor: String
  strength: [Strength!]
}

type Query {
  spike(input: SpikeInput!): Spike
  spikes(input: SpikesInput!): [SpikeBase!]!
}

type Spike implements ISpikeBase & ISpikeDetail {
  allWeatherOnly: Boolean
  amazonUrl: String
  angleScore: Float
  brand: TAFBrands
  brandPageUrl: String
  colorImages: [ColorImages!]!
  detailSpec: SpikeDetailSpec
  events: [TAFShoeEvents!]
  gripScore: Float
  hardnessScore: Float
  id: String!
  keyFeature: [AricleItem!]
  lightnessScore: Float
  name: String!
  nameEn: String
  newModels: [ISpikeBase!]
  price: Int
  rakutenUrl: String
  recommendItems: [ISpikeBase!]
  recommendedFor: String
  score: Int
  strength: [Strength!]
  weight: Int
  widthScore: Float
}

type SpikeBase implements ISpikeBase {
  allWeatherOnly: Boolean
  angleScore: Float
  brand: TAFBrands
  colorImages: [ColorImages!]!
  events: [TAFShoeEvents!]
  gripScore: Float
  hardnessScore: Float
  id: String!
  lightnessScore: Float
  name: String!
  nameEn: String
  price: Int
  score: Int
  weight: Int
  widthScore: Float
}

type SpikeDetailSpec {
  allWeatherOnly: String
  athleteLevel: String
  events: String
  madeIn: String
  name: String
  pinDetail: String
  price: String
  releaseYear: String
  shoeLaceType: String
  size: String
  soleMaterial: String
  upperMaterial: String
  weight: String
}

input SpikeInput {
  id: String!
}

input SpikesInput {
  """
  trueの場合はオールウェザー専用のみ、falseの場合は土兼用のみ、値がない場合はどちらも
  """
  allWeatherOnly: Boolean
  athleteLevel: [TAFAthleteLevel!]
  brands: [TAFBrands!]
  events: [TAFEvents!]
  keyword: String

  """
  trueの場合は最新のみ、falseの場合は最新じゃないもののみ、値がない場合はどちらも
  """
  latestOnly: Boolean
  limit: Int
  order: TAFShoeOrder
  pinCountRangeMax: Int
  pinCountRangeMin: Int
  priceRangeMax: Int
  priceRangeMin: Int
  shoeColor: [String]
  shoeLaceType: [TAFShoeLaceType!]
  years: [String!]
}

type Strength {
  description: String
  icon: String
  label: String
}

enum TAFAthleteLevel {
  advanced
  beginner
  intermediate
  professional
}

enum TAFBrands {
  adidas
  asics
  mizuno
  newBalance
  nike
}

enum TAFEvents {
  discusThrow
  e100m
  e110mH
  e200m
  e400m
  e400mH
  e800m
  e1500m
  e3000m
  e3000msc
  e5000m
  e10000m
  hammerThrow
  highJump
  javelinThrow
  longJump
  poleVault
  shotPut
  tripleJump
}

type TAFShoeEvents {
  id: TAFEvents!
  label: String!
}

enum TAFShoeLaceType {
  belt
  lace
}

enum TAFShoeOrder {
  expensive
  flat
  gripPower
  hard
  highscore
  inexpensive
  light
  narrow
  warp
  wide
}
